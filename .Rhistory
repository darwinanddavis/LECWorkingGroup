outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
mean(mp)
# make matrix dims the same as param space dims
mp_ <- outplot[-1,]
mp <- mp_[,out_name]
mz = matrix(mp, nrow=mr, ncol=mc, byrow=T)
filled.contour(x=beta_pars, y=death_pars, z=mz, col=magma(20),
main=paste0(out_name),xlab=expression(beta),ylab="Death"
)
out_names <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
# select output to plot
out_name <- out_names[5]
# choose your death value you want to plot at the end
death_access <- 0.1
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.9
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
# set parameter ranges (min 0, max 1)
beta_access <- 0.1 # choose your beta value you want to plot at the end
death_access <- 0.1 # choose your death value you want to plot at the end
colvv <- "orange" # choose your plot line colour
# then run this part to plot in your live R session
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
layout(matrix(c(1,2,3,4,5,5), 2, 3, byrow = TRUE)) # set plot window
colnames(outplot) <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
for (name in names(outplot)[c(3:5,2,6)]){ # start plot for product, suscep hosts, infec hosts, nutrients, and total hosts
plot(outplot[,1],outplot[,name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=name,col=colvv,
ylim=c(0,round_any(max(outplot[,name]),10,ceiling))
)
title(paste0(name,"\nbeta = ",beta_access," , death = ",death_access))
} # end plot
beta_access <- 0.1 # choose your beta value you want to plot at the end
death_access <- 0.1 # choose your death value you want to plot at the end
### --------------------------- run below code ------------------------------------
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3,4,5,5), 2, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
out_names <- c("Time",
"Nutrient biomass",
"Plant biomass",
"Hosts (susceptible)",
"Hosts (infected)",
"Total hosts")
colvec<-brewer.pal(length(wastes),"Set2")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
for(out_tibble in wastes){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
for (name in names(outplot)[c(3:5,2,6)]){ # start plot
plot(outplot[,1],outplot[,name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=name,
col=colvec[pf],#lty=pf,
ylim=c(0,round_any(max(outplot[,name]),10,ceiling))
)
title(paste0(name,"\nbeta = ",beta_access," , death = ",death_access))
} # end plot loop
# dev.off()
title(paste0("\n\n\n",ttl_list[pc]))
pf <- pf + 1; pc <- pc + 1
} # end wastes loop
### -------------------------- simulate all param values -------------------------------
out_names <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
# select output to plot
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.9
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.1
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_names <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
# select output to plot
out_name <- out_names[5]
# choose your death value you want to plot at the end
death_access <- 0.9
### -------------------------- run code from here to plot
#pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,50)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
beta_access <- 0.9 # choose your beta value you want to plot at the end
death_access <- 0.1 # choose your death value you want to plot at the end
### -------------------------- run code from here to plot
#pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3,4,5,5), 2, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
out_names <- c("Time",
"Nutrient biomass",
"Plant biomass",
"Hosts (susceptible)",
"Hosts (infected)",
"Total hosts")
colvec<-brewer.pal(length(wastes),"Set2")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
for(out_tibble in wastes){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
for (name in names(outplot)[c(3:5,2,6)]){ # start plot
plot(outplot[,1],outplot[,name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=name,
col=colvec[pf],#lty=pf,
ylim=c(0,round_any(max(outplot[,name]),10,ceiling))
)
title(paste0(name,"\nbeta = ",beta_access," , death = ",death_access))
} # end plot loop
#dev.off()
title(paste0("\n\n\n",ttl_list[pc]))
pf <- pf + 1; pc <- pc + 1
} # end wastes loop
### -------------------------- simulate all param values -------------------------------
out_names <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
# select output to plot
out_name <- out_names[5]
# choose your death value you want to plot at the end
death_access <- 0.9
### -------------------------- run code from here to plot
#pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,50)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_names <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
# select output to plot
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.1
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.1
### -------------------------- run code from here to plot
#pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,50)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
beta_access <- 0.9 # choose your beta value you want to plot at the end
death_access <- 0.1 # choose your death value you want to plot at the end
colvv <- "orange" # choose your plot line colour
# then run this part to plot in your live R session
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
layout(matrix(c(1,2,3,4,5,5), 2, 3, byrow = TRUE)) # set plot window
colnames(outplot) <- c("Time", #1
"Nutrient biomass", #2
"Plant biomass", #3
"Hosts (susceptible)", #4
"Hosts (infected)", #5
"Total hosts") #6
for (name in names(outplot)[c(3:5,2,6)]){ # start plot for product, suscep hosts, infec hosts, nutrients, and total hosts
plot(outplot[,1],outplot[,name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=name,col=colvv,
ylim=c(0,round_any(max(outplot[,name]),10,ceiling))
)
title(paste0(name,"\nbeta = ",beta_access," , death = ",death_access))
} # end plot
out_name <- out_names[5]
# choose your death value you want to plot at the end
death_access <- 0.1
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
out_name <- out_names[2]
# choose your death value you want to plot at the end
death_access <- 0.1
# pdf(paste0(getwd(),"/npsi_model_plot_",ttl,".pdf"),onefile=T,width=10,height=8,paper="a4r")
# then run this part to plot in your live R session
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE)) # set plot window
wastes <- list(out_tibble_wh,out_tibble_wd,out_tibble_ws)
ttl_list <- c("Host waste","Drool waste","Summed waste")
pf <- 1 # plot feature counter
pc <- 1 # plot number counter
colvec<-brewer.pal(length(beta_pars),"RdYlGn") # !!! make sure length of colour palette is > beta_pars
# dp <- 0.2
# bp <- 0.2
for(out_tibble in wastes){
for(beta_access in beta_pars){
outplot <- filter(out_tibble, death == death_access & beta == beta_access)
outplot <- outplot$outs ; outplot <- as.data.frame(outplot) # clean output
outplot$"Total host population" <- outplot[,"S"] + outplot[,"I"] # add sum host population
colnames(outplot) <- out_names
if(out_name==names(outplot[2]) | out_name==names(outplot[3])){ylim=c(0,200)}else{ylim=c(0,100)};ylim # set proper ylim
if(pf==length(beta_pars)+1){pf <- 1} # reset pf to reset colour palette for new plot
plot(outplot[,1],outplot[,out_name],type="l",las=1,bty="n",
xlab="Time (years)",ylab=out_name,
col=colvec[pf],#lty=pf,
ylim=ylim
)
par(new=T)
#dev.off()
pf <- pf + 1
} # end bbb loop
pc <- pc + 1
title(paste0(out_name,"\nbeta=",min(beta_pars)," to ",max(beta_pars),", death = ",death_access,"\n",ttl_list[pc-1]))
text(years-40,ylim[2],paste0("b=",beta_pars[1]),col=colvec[1]) # low beta
text(years-10,ylim[2],paste0("b=",max(beta_pars)),col=colvec[length(colvec)]) # high beta
} # end wastes loop
